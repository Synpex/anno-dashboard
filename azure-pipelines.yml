trigger:
- '*'

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8'
  displayName: 'Use Python 3.8'

- script: python -m pip install --upgrade pip
  displayName: 'Upgrade pip'

- script: pip install -r requirements.txt
  displayName: 'Install requirements'
  workingDirectory: 'annodashboard/src'  

- script: python manage.py test #--testrunner=xmlrunner.extra.djangotestrunner.XMLTestRunner (Already in the settings.py)
  displayName: 'Run Django Unit Tests'
  workingDirectory: 'annodashboard' 

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-reports/*.xml'
    testRunTitle: 'Django Unit Test Results'
    failTaskOnFailedTests: true 

- script: python manage.py collectstatic --no-input
  displayName: 'Collect static files'
  workingDirectory: 'annodashboard'  

- script: python manage.py check --deploy
  displayName: 'Check for deployment issues'
  workingDirectory: 'annodashboard'  

# Add additional steps here for any database migrations as needed
# - script: python manage.py makemigrations
#   displayName: 'Make database migrations'
#   workingDirectory: 'annodashboard'  

# - script: python manage.py migrate
#   displayName: 'Apply database migrations'
#   workingDirectory: 'annodashboard'  

# Add steps here to package your app if needed, for instance using Docker

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  condition: succeeded()
  inputs:
    pathtoPublish: 'annodashboard'  
    artifactName: 'drop'

